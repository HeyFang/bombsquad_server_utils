name: Nightly Build
on:
    # Run everyday at 5:30 UTC
    schedule:
      - cron: '30 5 * * *'
    workflow_dispatch:

jobs:
    make_docker_gui_debug_image:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - name: Cache Python venv
          id: cache-venv
          uses: actions/cache@v4
          env:
            cache-name: cache-python-dependencies
          with:
            path: .venv
            key: ${{ runner.os }}-venv-${{ env.cache-name }}-${{ hashFiles('config/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-venv-${{ env.cache-name }}-
              ${{ runner.os }}-venv-
        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.13'
        - name: Setup project environment
          run: make env
        - name: Docker login
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }} 
        - name: Make the build
          run: |
            make docker-gui-debug
            make docker-save
        - name: Upload the build
          uses: actions/upload-artifact@v4
          with:
            name: docker_gui(debug)
            path: build/docker/bombsquad_gui_debug_docker.tar
        - name: Push to github image repository
          run: |
            docker tag bombsquad_gui_debug:latest ghcr.io/${GITHUB_REPOSITORY,,}/bombsquad_gui:debug_nightly_x86_64
            docker push ghcr.io/${GITHUB_REPOSITORY,,}/bombsquad_gui:debug_nightly_x86_64

    make_docker_server_debug_image:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - name: Cache Python venv
          id: cache-venv
          uses: actions/cache@v4
          env:
            cache-name: cache-python-dependencies
          with:
            path: .venv
            key: ${{ runner.os }}-venv-${{ env.cache-name }}-${{ hashFiles('config/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-venv-${{ env.cache-name }}-
              ${{ runner.os }}-venv-
        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.13'
        - name: Setup project environment
          run: make env
        - name: Docker login
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }} 
        - name: Make the build
          run: |
            make docker-server-debug
            make docker-save
        - name: Upload the build
          uses: actions/upload-artifact@v4
          with:
            name: docker_server(debug)
            path: build/docker/bombsquad_server_debug_docker.tar
        - name: Push to github image repository
          run: |
            docker tag bombsquad_server_debug:latest ghcr.io/${GITHUB_REPOSITORY,,}/bombsquad_server:debug_nightly_x86_64
            docker push ghcr.io/${GITHUB_REPOSITORY,,}/bombsquad_server:debug_nightly_x86_64
            
    make_docs:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - name: Cache Python venv
          id: cache-venv
          uses: actions/cache@v4
          env:
            cache-name: cache-python-dependencies
          with:
            path: .venv
            key: ${{ runner.os }}-venv-${{ env.cache-name }}-${{ hashFiles('config/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-venv-${{ env.cache-name }}-
              ${{ runner.os }}-venv-
        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.13'
        - name: Setup project environment
          run: make env
        - name: Make the build
          run: make docs
        - name: Upload the build
          uses: actions/upload-artifact@v4
          with:
            name: html_docs
            path: build/docs
    
    make_flatpak_gui_debug:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - name: Cache Python venv
          id: cache-venv
          uses: actions/cache@v4
          env:
            cache-name: cache-python-dependencies
          with:
            path: .venv
            key: ${{ runner.os }}-venv-${{ env.cache-name }}-${{ hashFiles('config/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-venv-${{ env.cache-name }}-
              ${{ runner.os }}-venv-
        # Cache Flatpak SDK and Platform installations
        - name: Cache Flatpak SDK and Platform
          id: cache-flatpak-sdk
          uses: actions/cache@v4
          with:
            path: |
              ~/.local/share/flatpak
              /var/lib/flatpak
            key: ${{ runner.os }}-flatpak-sdk-SDL2-python3.13.3-rsync
            restore-keys: |
              ${{ runner.os }}-flatpak-sdk-
        # Cache flatpak builder dir
        - name: Cache flatpak-builder
          id: cache-flatpak-builder
          uses: actions/cache@v4
          with:
            path: .cache/flatpak/flatpak-builder
            key: ${{ runner.os }}-flatpak-builder-SDL2-python3.13.3-rsync
            restore-keys: |
              ${{ runner.os }}-flatpak-builder-
        # Cache flatpak build output directory and repo
        - name: Cache flatpak build_dir and repo
          id: cache-flatpak-build
          uses: actions/cache@v4
          with:
            path: |
             .cache/flatpak/build_dir
             .cache/flatpak/repo
            key: ${{ runner.os }}-flatpak-build-SDL2-python3.13.3
            restore-keys: |
              ${{ runner.os }}-flatpak-build-
        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.13'
        - name: Setup project environment
          run: |
            make env
        - name: Install dependencies
          run: |
            sudo apt install -y flatpak flatpak-builder
        
        # - name: Build Flatpak
        #   uses: flatpak/flatpak-github-actions/flatpak-builder@v6
        #   with:
        #     bundle: bombsquad.flatpak
        #     manifest-path: config/flatpak/net.froemling.BombSquad.yml
        #     cache-key: flatpak-builder-${{ hashFiles('config/flatpak/net.froemling.BombSquad.yml') }}-${{ github.sha }}

        - name: Make the build
          run: |
            sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
            sudo flatpak install -y flathub org.freedesktop.Sdk//24.08
            sudo flatpak install -y flathub org.freedesktop.Platform//24.08
            sudo flatpak install -y flathub org.freedesktop.Sdk.Extension.llvm20
            make flatpak-linux
        - name: Upload the build
          uses: actions/upload-artifact@v4
          with:
            name: bombsquad(debug).flatpak
            path: build/flatpak/bombsquad.flatpak